<template>
    <div class="tabs">
        <div class="mainContentWrap">
            <div class="pageNavbar">
                <span style="color: black">当前位置&nbsp;&nbsp;>&nbsp;&nbsp;</span>
                <span>教学计划&nbsp;&nbsp;>&nbsp;&nbsp;</span>
                <span @click="gobackPlanList" >{{tabs[currentTab]}}&nbsp;&nbsp;>&nbsp;&nbsp;</span>
                <span v-show="showPlanDetailsFlag || showPlanItemContentFlag  || showCourseContentFlag  || showWeekContentFlag" @click="goPlanDetails(navPlanID)">计划详情&nbsp;&nbsp;>&nbsp;&nbsp;</span>
                <span v-show="showPlanItemContentFlag  || showCourseContentFlag  || showWeekContentFlag " >{{ planAcitonNname }}&nbsp;&nbsp;>&nbsp;&nbsp;</span>
            </div>
            <div class="severalBoxes">
                <!--集体，个人页-->
                <div class="tabs-content" v-show="showTabsContentFlag">
                    <div class="tabs-chose">
                        <li v-for="(tab, index) in tabs" :class="{active : currentTab === index }" @click="tabSelect(index)">{{tab}}
                        </li>
                    </div>
                    <div v-for="(tab,tabIndex) in tabs" class="tab-content" v-show="currentTab === tabIndex">
                            <!--集体计划-->
                            <div v-if="tabIndex === 0">
                                <div class="planCenter-content">
                                    <div class="toolBox">
                                        <div class="addWrap">
                                            <el-button @click="addGroupPlan">新增计划</el-button>
                                        </div>
                                    </div>
                                    <div class="newsList">
                                        <el-card class="cardBox colorHeader" :body-style="{ padding: '0px'}">
                                            <div class="tableWrap">
                                                <el-table :data="groupPlanData.Records" style="width: 100%">
                                                    <el-table-column type="index" width="160">
                                                    </el-table-column>

                                                    <el-table-column prop="Title" label="计划名称" width="600">
                                                    </el-table-column>

                                                    <el-table-column label="操作">
                                                        <template scope="scope">
                                                            <el-button size="small" :plain="true" type="info" @click="goPlanDetails(scope.row.ID)">计划详情</el-button>
                                                            <el-button size="small" :plain="true" type="warning" @click="modifyGroupPlan(scope.row)">修改计划</el-button>
                                                        </template>
                                                    </el-table-column>
                                                </el-table>
                                            </div>
                                            <div style="float: right">
                                                <el-pagination @current-change="requestGroupPlanData" layout="prev, pager, next" :total="groupPlanData.Total">
                                                </el-pagination>
                                            </div>
                                        </el-card>
                                    </div>
                                </div>
                            </div>
                            <!--个人计划-->
                            <div v-if="tabIndex === 1">
                                <div class="planCenter-content">
                                    <div class="toolBox">
                                        <div class="addWrap">
                                            <el-button @click="addPersonoalPlan">新增计划</el-button>
                                        </div>
                                    </div>
                                    <div class="newsList">
                                        <el-card class="cardBox colorHeader" :body-style="{ padding: '0px'}">
                                            <div class="tableWrap">
                                                <el-table :data="personalPlanData.Records" style="width: 100% ">
                                                    <el-table-column type="index" width="160">
                                                    </el-table-column>

                                                    <el-table-column prop="Title" label="名称" width="600">
                                                    </el-table-column>

                                                    <el-table-column label="操作">
                                                        <template scope="scope">
                                                            <el-button size="small" :plain="true" type="warning" @click="goPlanDetails(scope.row.ID)">计划详情</el-button>
                                                            <el-button size="small" :plain="true" type="info" @click="modifyPersonoalPlan(scope.row)">修改计划</el-button>
                                                        </template>
                                                    </el-table-column>
                                                </el-table>
                                            </div>
                                            <div style="float: right">
                                                <el-pagination @current-change="requestPersonalPlanData" layout="prev, pager, next" :total="personalPlanData.Total">
                                                </el-pagination>
                                            </div>
                                        </el-card>
                                    </div>
                                </div>
                            </div>
                        </div>
                </div>

                <!--学期，月，周计划页-->
                <div class="planWrap" v-show="showPlanDetailsFlag">
                    <div class="tabsWrap">
                        <vueTab :tabtitles="vueTabArr" :current-page="1">
                            <div class="tab-content-container">
                                <div class="center-content">
                                    <!--<div class="toolBox"></div>-->
                                    <div class="contentBox">
                                        <div v-for="(item, index) in planDetailsData.TremPlans" class="item">
                                            <div class="titleBox">
                                                <span class="titleBoxContent">{{ item.Name}}</span>
                                            </div>
                                            <div class="planItemContent">
                                                <div class="planItemContentLeft">
                                                    <span>教学名称: {{ planDetailsData.Title }}</span>
                                                </div>
                                                <div class="planItemContentRight">
                                                    <el-button @click="goPlanLineDetails(item, vueTabArr[0])"  :plain="true" type="info">查看{{ vueTabArr[0] }}详情</el-button>
                                                    <el-button @click="editMouthPlan(item)"  :plain="true" type="warning">编辑月计划</el-button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-content-container">
                                <div class="center-content">
                                    <!--<div class="toolBox"></div>-->
                                    <div class="contentBox">
                                        <div v-for="(item, index) in planDetailsData.MonthPlans" class="item">
                                            <div class="titleBox">
                                                <span class="titleBoxContent">{{ item.Name}}</span>
                                            </div>
                                            <div class="planItemContent">
                                                <div class="planItemContentLeft">
                                                    <span>教学名称: {{ planDetailsData.Title }}</span>
                                                </div>
                                                <div class="planItemContentRight">
                                                    <el-button @click="goPlanLineDetails(item, vueTabArr[1])"  :plain="true" type="info">查看{{ vueTabArr[1] }}详情</el-button>
                                                    <el-button @click="editWeekPlan(item)"  :plain="true" type="warning">编辑周计划</el-button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-content-container">
                                <div class="center-content">
                                    <!--<div class="toolBox"></div>-->
                                    <div class="contentBox">
                                        <div v-for="(item, index) in planDetailsData.WeekPlans" class="item">
                                            <div class="titleBox">
                                                <span class="titleBoxContent">{{ item.Name}}</span>
                                            </div>
                                            <div class="planItemContent">
                                                <div class="planItemContentLeft">
                                                    <span>教学名称: {{ planDetailsData.Title }}</span>
                                                </div>
                                                <div class="planItemContentRight">
                                                    <el-button @click="goPlanLineDetails(item, vueTabArr[2])"  :plain="true" type="info">查看{{ vueTabArr[2] }}详情</el-button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </vueTab>
                    </div>
                </div>

                <!--计划详情页-->
                <div class="planItem-content" v-show="showPlanItemContentFlag">
                    <!--<div class="toolBox">-->
                    <!--<el-button @click="editCourseDetails()">编辑课程</el-button>-->
                    <!--</div>-->
                    <div class="planItemDetails">
                        <div v-for="(item, index) in planItemContentsData" class="item">
                            <div class="titleBox">
                                <p style="margin-left: 10px">{{ item.Name}}</p>
                            </div>
                            <div class="planBox">
                                <p><span style="font-size: 16px;font-weight: bold;margin-left: 10px">教学内容：</span> <span class="techText">{{ item.TeachContent }}</span></p>
                                <p><span style="font-size: 16px;font-weight: bold;margin-left: 10px">教学目标：</span> <span class="techText">{{ item.TeachTarget }}</span></p>
                            </div>
                        </div>
                    </div>
                </div>

                <!--月计划编辑页-->
                <div class="course-content" v-show="showCourseContentFlag">
                    <div class="grayBackground">
                        <div class="iepmultiChose">
                            <div class="choseBoxHeader">
                                <span class="choseTopic">主题</span>
                                <span class="mouthItem">{{ defaultMouthSequence[0] }}</span>
                                <span class="mouthItem">{{ defaultMouthSequence[1] }}</span>
                                <span class="mouthItem">{{ defaultMouthSequence[2] }}</span>
                                <span class="mouthItem">{{ defaultMouthSequence[3] }}</span>
                                <span class="mouthItem">{{ defaultMouthSequence[4] }}</span>
                            </div>
                            <div class="choseBoxWrap">
                                <div v-for="(course, courseIndex) in planCourseData" class="choseBoxBody">
                                    <div class="courseBox">
                                        <p class="courseName">{{ course.Name }}</p>
                                        <div class="chaptesBox">
                                            <div v-for="chapt in course.Child">

                                                <div class="checkBoxItems">

                                                    <span class="chaptName">{{ chapt.Name }}</span>

                                                    <div class="mouthItem" >
                                                        <input :id="chapt.ID*1" type="checkbox" class="checkBoxClass" :value="chapt.ID"  v-model="mouthOne"/>
                                                        <label :for="chapt.ID*1" class="simbleBox"></label>
                                                    </div>

                                                    <div class="mouthItem" >
                                                        <input :id="chapt.ID*2" type="checkbox" class="checkBoxClass" :value="chapt.ID" v-model="mouthTwo"/>
                                                        <label :for="chapt.ID*2" class="simbleBox"></label>
                                                    </div>

                                                    <div class="mouthItem" >
                                                        <input :id="chapt.ID*3" type="checkbox" class="checkBoxClass" :value="chapt.ID" v-model="mouthThree"/>
                                                        <label :for="chapt.ID*3" class="simbleBox"></label>
                                                    </div>

                                                    <div class="mouthItem" >
                                                        <input :id="chapt.ID*4" type="checkbox" class="checkBoxClass" :value="chapt.ID" v-model="mouthFour"/>
                                                        <label :for="chapt.ID*4" class="simbleBox"></label>
                                                    </div>

                                                    <div class="mouthItem" >
                                                        <input :id="chapt.ID*5" class="checkBoxClass" type="checkbox" :value="chapt.ID" v-model="mouthFive"/>
                                                        <label :for="chapt.ID*5" class="simbleBox"></label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="toolBox">
                                    <el-button @click="submitMouthData" class="submitBtn">提交课程</el-button>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>

                <!--周计划编辑页-->
                <div class="course-content" v-show="showWeekContentFlag">
                    <div class="grayBackground">
                        <div class="iepmultiChose">
                            <div class="choseBoxHeader">
                                <span class="choseTopic">主题</span>
                                <span class="checkBoxItem">{{ defaultWeekSequence[0] }}</span>
                                <span class="checkBoxItem">{{ defaultWeekSequence[1] }}</span>
                                <span class="checkBoxItem">{{ defaultWeekSequence[2] }}</span>
                                <span class="checkBoxItem">{{ defaultWeekSequence[3] }}</span>
                            </div>
                            <div class="choseBoxWrap">
                                <div v-for="(course, courseIndex) in weekPlanData" class="choseBoxBody">
                                    <div class="courseBox">
                                        <p class="courseName">{{ course.Name }}</p>
                                        <div class="chaptesBox">
                                            <div v-for="chapt in course.Child">

                                                <div class="checkBoxItems">

                                                    <span class="chaptName">{{ chapt.Name }}</span>

                                                    <div class="checkBoxItem" >
                                                        <input :id="chapt.ID*11" type="checkbox" class="checkBoxClass" :value="chapt.ID"  v-model="weekOne"/>
                                                        <label :for="chapt.ID*11" class="simbleBox"></label>
                                                    </div>

                                                    <div class="checkBoxItem" >
                                                        <input :id="chapt.ID*12" type="checkbox" class="checkBoxClass" :value="chapt.ID" v-model="weekTwo"/>
                                                        <label :for="chapt.ID*12" class="simbleBox"></label>
                                                    </div>

                                                    <div class="checkBoxItem" >
                                                        <input :id="chapt.ID*13" type="checkbox" class="checkBoxClass" :value="chapt.ID" v-model="weekThree"/>
                                                        <label :for="chapt.ID*13" class="simbleBox"></label>
                                                    </div>

                                                    <div class="checkBoxItem" >
                                                        <input :id="chapt.ID*14" type="checkbox" class="checkBoxClass" :value="chapt.ID" v-model="weekFour"/>
                                                        <label :for="chapt.ID*14" class="simbleBox"></label>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="toolBox">
                                    <el-button @click="submitWeekData" class="submitBtn">提交课程</el-button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>

        </div>

        <!--新增计划Dialog-->
        <el-dialog title="新增计划" v-model="addPlanDialogFlag" :close-on-click-modal="false" :show-close="false" size="small">
    
            <el-form ref="form" :model="planFormData" label-width="80px">
    
                <el-form-item label="标题">
                    <el-input v-model="planFormData.Title"></el-input>
                </el-form-item>
    
                <el-form-item label="时间">
                    <el-date-picker type="date" placeholder="选择日期" v-model="planFormData.StartDate" style="width: 60%;"></el-date-picker>
                </el-form-item>
    
                <el-form-item label="课程">
                    <div class="checkBoxWrap" style="width: 590px">
                        <div v-for="(item,index) in courseData" style="display: inline-flex;width: 195px;height: 50px;align-items: center;" class="addCourseGroup">
                            <input type="checkbox" :id="item.ID*(index+1)" :value="item.ID" v-model="planFormData.Courses" class="checkBoxClass">
                            <label :for="item.ID*(index+1)" class="addPlanFormCheckBox"></label>
                            <label style="font-size: 12px">{{ item.Name }}</label>
                        </div>
                    </div>
                </el-form-item>
                <div v-show="!isPeronalPlanFlag">
                    <el-form-item label="学生">
                        <el-select v-model="planFormData.GroupID" placeholder="请选择小组" @change="groupChange">
                            <el-option v-for="(item, index) in groupData" :key="item.GroupID" :label=item.groupName :value=item.groupID>
                            </el-option>
                        </el-select>
                    </el-form-item>
                </div>
    
                <div v-show="isPeronalPlanFlag">
                    <el-form-item label="学生">
                        <el-select v-model="planFormData.GroupID" placeholder="请选择小组" @change="groupChange">
                            <el-option v-for="(item, index) in groupData" :key="item.groupID" :label=item.groupName :value=item.groupID>
                            </el-option>
                        </el-select>
    
                        <el-select v-model="planFormData.StudentID" placeholder="请选择患者">
                            <el-option v-for="item in patientData" :key="item.ID" :label=item.Name :value=item.ID>
                            </el-option>
                        </el-select>
    
                    </el-form-item>
                </div>
    
            </el-form>
    
            <div slot="footer" class="dialog-footer">
                <el-button @click.native="planCancel()">返回</el-button>
                <el-button type="primary" @click.native="planSubmit()">提交</el-button>
            </div>
        </el-dialog>

    </div>
</template>
<script>
import vueTab from '../../components/vue-tab.vue'
import api from '../../api/index.js'
import { Loading } from 'element-ui';

export default {
    name: 'iepPlan',
    components: {
        vueTab,
    },
    data() {
        return {
            currentTab: 0,
            tabs: ['集体计划', '个人计划'],
            vueTabArr:['学期计划','月计划','周计划'],
            groupPlanCurrentPage: 1,
            persononalCurrentPage: 1,
            groupPlanData: '',//集体计划ListData
            personalPlanData: '',//个人计划ListData
            addPlanDialogFlag: false,
            planFormData: {
                ID: '',
                Title: "",
                Template: '',
                Type: '',
                StartDate: "",
                Courses: [],
                GroupID: '',
                StudentID: ''
            },
            courseData: [],
            patientData: [],
            groupData: [],
            planDetailsData: '',//教学计划详情Data
            showTabsContentFlag: true,  //集体，和个人计划列表
            showPlanDetailsFlag: false, // 设置是否显示单元计划列表
            showPlanItemContentFlag: false,//设置是否显示教学计划Item详情页
            showCourseContentFlag: false,// 显示月计划编辑页面
            showWeekContentFlag: false, // 是否显示周计划编辑页面
            isPeronalPlanFlag: false, // 当前选项卡是否是个人计划,弹出框的切换
            planItemContentsData: '',//教学计划Item详情Data
            planCourseData: [],//月计划
            weekPlanData: [], // 周计划
            currentPlanLine: '',
            selectCourseCollection: [],//新选主题、章节,
            mouthOne: [],
            mouthTwo: [],
            mouthThree: [],
            mouthFour: [],
            mouthFive: [],
            weekOne: [],
            weekTwo: [],
            weekThree: [],
            weekFour: [],
            weekIines: ['','','',''],
            LineIdOne: '',
            LineIdTwo: '',
            LineIdThree: '',
            LineIdFour: '',
            LineIdFive: '',
            defaultMouthSequence: ['6月','7月','8月','9月','10月'],
            defaultWeekSequence: ['第一周','第二周','第三周','第四周'],
            mouthSequence: [],
            weekSequence: [],
            navPlanID: '',
            planAcitonNname: ''
        }
    },
    computed: {
        allSelectCourse: function () {
            let allSelectCourse = [];
            for (let i=0;i<5;i++) {
                allSelectCourse[i]= {
                    LineID: '',
                    CourseIds: []
                };
            };
            return allSelectCourse;
        },
        weekSelectCourse: function () {
            let weekSelectCourse = [];
            for (let i=0;i<4;i++) {
                weekSelectCourse[i]= {
                    LineID: '',
                    CourseIds: []
                };
            };
            return weekSelectCourse;
        },
//        courseTopices: function () {
//            return this.planDetailsData.Courses.length
//        }
    },
    methods: {
        //返回集体，个人列表
        gobackPlanList() {
            this.showTabsContentFlag = true;
            this.showPlanDetailsFlag = false;
            this.showPlanItemContentFlag = false;
            this.showCourseContentFlag = false;
            this.showWeekContentFlag = false;
        },
        //切换选项卡
        tabSelect: function (index) {
            this.currentTab = index
            this.showPlanDetailsFlag = false;
            this.showTabsContentFlag = true;
            this.showWeekContentFlag = false;
            this.showCourseContentFlag = false;
            this.showPlanItemContentFlag = false;
        },
        addGroupPlan: function () {
            this.addPlanDialogFlag = true;
            this.isPeronalPlanFlag = false;
        },
        //更新集体计划
        modifyGroupPlan: function (item) {
            api.getPlanDetail(item.ID).then(res => {
                this.addPlanDialogFlag = true;
                this.isPeronalPlanFlag = false;
                this.planFormData.ID = res.ID;
                this.planFormData.Title = res.Title;
                this.planFormData.StudentID = res.StudentID;
                this.planFormData.GroupID = res.GroupID;
                this.planFormData.Type = res.Type;
                this.planFormData.StartDate = res.StartDate;
                this.planFormData.Template = res.Template;
                this.planFormData.Courses = this.getCourseArray(res.Courses);
            });
        },
        //添加个人计划
        addPersonoalPlan: function () {
            this.addPlanDialogFlag = true;
            this.isPeronalPlanFlag = true;
        },
        //更新个人计划
        modifyPersonoalPlan: function (item) {
            api.getPlanDetail(item.ID).then(res => {
                this.addPlanDialogFlag = true;
                this.isPeronalPlanFlag = true;
                this.planFormData.ID = res.ID;
                this.planFormData.Title = res.Title;
                this.planFormData.StudentID = res.StudentID;
                var isFind = false;
                for (var i = 0; i < this.groupData.length; i++) {
                    for (var j = 0; j < this.groupData[i].groupPatients.length; j++) {
                        if (this.groupData[i].groupPatients[j].ID == res.StudentID) {
                            this.planFormData.GroupID = this.groupData[i].groupID;
                            isFind = true;
                            break;
                        }
                    }
                    if (isFind)
                        break;
                }
                this.planFormData.Type = res.Type;
                this.planFormData.StartDate = res.StartDate;
                this.planFormData.Template = res.Template;
                this.planFormData.Courses = this.getCourseArray(res.Courses);
                this.groupChange(this.planFormData.GroupID);
            });
        },
        //查看教学计划详情
        goPlanDetails: function (id) {
            this.navPlanID = id;
            this.requestPlanDetails(id);
            this.showTabsContentFlag = false;
            this.showPlanDetailsFlag = true;
            this.showPlanItemContentFlag = false;
            this.showCourseContentFlag = false;
            this.showWeekContentFlag = false;
        },
        //获取教学计划详情，包含学期、月、周计划信息
        requestPlanDetails(id) {
            api.getPlanDetail(id).then(res => {
                this.planDetailsData = res;
                console.log(this.planDetailsData);
                this.mouthSequence = res.MonthPlans;  //保存月计划名称与ID的对应关系，编辑月计划时使用
              this.weekSequence = res.WeekPlans;      ////保存月计划名称与ID的对应关系，编辑周计划时使用
                console.log(this.weekSequence);
                for (let i=0;i<this.mouthSequence.length;i++) {
                    this.defaultMouthSequence[i] = this.mouthSequence[i].Name;
                }
                console.log(this.defaultMouthSequence);
            });
        },
        goPlanLineDetails(item, title) {
            this.showPlanDetailsFlag = false;
            this.showTabsContentFlag = false;
            this.showPlanItemContentFlag = true;
            this.planAcitonNname = title;
            this.requestItemDetails(item.ID);
            this.currentPlanLine = item;
        },
        //编辑周计划
      editWeekPlan(item) {
          let id = item.ID
        this.requestItemDetails(id);
        let weeksArray = []
        let arr = this.weekSequence;
        for (let i=0;i<arr.length;i++) { //筛选出当前的当月下面的周
          if (arr[i].ParentID === id) {
            weeksArray.push(arr[i]);
          }
        }
          this.weekSequence = weeksArray;
          console.log('weekSequence现在的值');
          console.log(this.weekSequence);
        for (let i=0;i<weeksArray.length;i++) {
            this.defaultWeekSequence[i] = weeksArray[i].Name;
        }
          console.log('请求返回的各周数据');
          console.log(this.defaultWeekSequence);

          let lineID = item.ID
          console.log(lineID);
          var params = {
              lineID: lineID
          };
          api.getCourseDetails(params).then(res => {
              console.log('获取周计划的返回值');
              console.log(res);
              this.weekPlanData = res.List;
              this.showPlanDetailsFlag = false;
              this.showTabsContentFlag = false;
              this.showPlanItemContentFlag = false;
              this.showCourseContentFlag = false;
              this.showWeekContentFlag = true;
              this.planAcitonNname = '编辑周计划';
          });
          this.weekOne = [];
          this.weekTwo  = [];
          this.weekThree  = [];
          this.weekFour   = [];
          for (let i=0;i<4;i++) {
              this.weekIines[i] = this.weekSequence[i].ID
          }
          api.getSelectCourse(id).then(res =>{
            console.log('已填写的问题');
            console.log(res);
          for (let i=0;i<res.List.length;i++) {
              let foo = res.List[i].ID
            if ( foo === this.weekSequence[0].ID) {
              this.weekOne = res.List[i].SelectedCourses;
            } else if (foo === this.weekSequence[1].ID) {
              this.weekTwo = res.List[i].SelectedCourses;
            } else if (foo === this.weekSequence[2].ID){
              this.weekThree = res.List[i].SelectedCourses;
            } else if (foo === this.weekSequence[3].ID) {
              this.weekFour = res.List[i].SelectedCourses;
            }
          }
        });
      },
        // 编辑月计划
        editMouthPlan(item) {
            this.requestItemDetails(item.ID);
            this.getPlanCourseDetails(item.ID);
            this.currentPlanLine = item;
            this.mouthOne =  [];
            this.mouthTwo =[];
            this.mouthThree = [];
            this.mouthFour = [];
            this.mouthFive= [];
            this.LineIdOne = this.mouthSequence[0].ID;
            this.LineIdTwo  = this.mouthSequence[1].ID;
            this.LineIdThree = this.mouthSequence[2].ID;
            this.LineIdFour = this.mouthSequence[3].ID;
            this.LineIdFive = this.mouthSequence[4].ID;
            api.getSelectCourse(item.ID).then(res => {
                for (let i=0;i<res.List.length;i++) {
                    if (res.List[i].ID === this.mouthSequence[0].ID) {
                         this.mouthOne = res.List[i].SelectedCourses;
                    } else if (res.List[i].ID === this.mouthSequence[1].ID) {
                       this.mouthTwo = res.List[i].SelectedCourses;

                    } else if (res.List[i].ID === this.mouthSequence[2].ID){
                        this.mouthThree = res.List[i].SelectedCourses;

                    } else if (res.List[i].ID === this.mouthSequence[3].ID) {
                        this.mouthFour = res.List[i].SelectedCourses;

                    } else if (res.List[i].ID === this.mouthSequence[4].ID) {
                        this.mouthFive = res.List[i].SelectedCourses;
                    }
                }
            });
        },
        //获取学期、月、周计划详情
        requestItemDetails(id) {
            api.getPlanItemDetail(id).then(res => {
                this.planItemContentsData = res.List;
                console.log('获取计划详情');
                console.log(this.planItemContentsData);
            });
        },
        //编辑月、周计划的主题章节
        editCourseDetails() {
            this.showPlanDetailsFlag = false;
            this.showTabsContentFlag = false;
            this.showPlanItemContentFlag = false;
            this.showWeekContentFlag = false;
            this.showCourseContentFlag = true;
            this.getPlanCourseDetails();
        },
        //通过LineID获取当前计划的主题、章节
        getPlanCourseDetails(lineID) {
            console.log(lineID);
            var params = {
                lineID: lineID
            };
            api.getCourseDetails(params).then(res => {
                console.log('获取月计划的返回值');
                console.log(res);
                this.planCourseData = res.List;
                this.showPlanDetailsFlag = false;
                this.showTabsContentFlag = false;
                this.showPlanItemContentFlag = false;
                this.showCourseContentFlag = true;
                this.planAcitonNname = '编辑月计划';
            });
        },
        //提交月计划
        submitMouthData() {
            var arr = [
                {
                    LineID: this.LineIdOne,
                    CourseIds: this.mouthOne
                },
                {
                    LineID: this.LineIdTwo ,
                    CourseIds: this.mouthTwo
                },
                {
                    LineID: this.LineIdThree,
                    CourseIds: this.mouthThree
                },
                {
                    LineID: this.LineIdFour,
                    CourseIds: this.mouthFour
                },
                {
                    LineID: this.LineIdFive,
                    CourseIds: this.mouthFive
                }
            ];
            this.submitCourseData(arr);


        },
        resetMouthData() {
            let allSelectCourse = [];
            for (let i=0;i<5;i++) {
                allSelectCourse[i]= {
                    LineID: '',
                    CourseIds: []
                };
            };
            return allSelectCourse;
        },
        //提交周计划
        submitWeekData() {
            let filterArr = [];
            let originArr = this.weekPlanData;
            for (let i=0;i<originArr.length;i++) {
                for (let j=0;j<originArr[i].Child.length;j++) {
                    filterArr.push(originArr[i].Child[j].ID)
                }
            }
            //筛选
            let arr1 = this.weekOne;
           this.weekOne = this.filterSameID(arr1, filterArr);
            let arr2 = this.weekTwo;
           this.weekTwo = this.filterSameID(arr2, filterArr);
            let arr3 = this.weekThree;
           this.weekThree = this.filterSameID(arr3, filterArr);
            let arr4 = this.weekFour;
           this.weekFour = this.filterSameID(arr4, filterArr);
            var arr = [
                {
                    LineID: this.weekIines[0],
                    CourseIds: this.weekOne
                },
                {
                    LineID: this.weekIines[1],
                    CourseIds: this.weekTwo
                },
                {
                    LineID: this.weekIines[2],
                    CourseIds: this.weekThree
                },
                {
                    LineID: this.weekIines[3],
                    CourseIds: this.weekFour
                }
            ];
            this.submitCourseData(arr);
        },
        filterSameID(targetArr,sourceArr) {
            let result = [];
            for (let i=0;i<targetArr.length;i++) {
                for (let j=0;j<sourceArr.length;j++) {
                    if (targetArr[i] === sourceArr[j]) {
                        result.push(targetArr[i])
                    }
                }
            }
            return result;
        },
        resetWeekData() {
            let weekSelectCourse = [];
            for (let i=0;i<4;i++) {
                weekSelectCourse[i]= {
                    LineID: '',
                    CourseIds: []
                };
            };
            return weekSelectCourse;
        },
        submitCourseData(data) {
            console.log('要提交的数据');
            console.log(data);
            let params = data;
            api.editSubPlan(params).then(res => {
                console.log('提交的状态');
                console.log(res);
                if (res.Status) {
                    this.$message.success(res.Message);
                    this.showPlanDetailsFlag = false;
                    this.showTabsContentFlag = false;
                    this.showPlanItemContentFlag = true;
                    this.showWeekContentFlag = false;
                    this.showCourseContentFlag = false;
                    this.planAcitonNname = '计划详情';
                    this.selectCourseCollection = [];
                    this.requestItemDetails(this.currentPlanLine.ID);
                } else {
                    this.$message.error('提交失败');
                }
            });
        },
        //获取集体计划列表
        requestGroupPlanData: function (pageIndex) {
            var params = {
                'pageIndex': pageIndex,
                'pageSize': 10,
                'planType': 0
            };
            api.drTeachingPlan(params).then(res => {
                console.log('获取集体计划列表');
                console.log(res);
                this.groupPlanData = res.data;
            });
        },
        //获取个人计划列表
        requestPersonalPlanData: function (pageIndex) {
            console.log('刷新页面');
            var params = {
                'pageIndex': pageIndex,
                'pageSize': 10,
                'planType': 1
            };
            api.drTeachingPlan(params).then(res => {
                console.log('更新个人计划数据源');
                console.log(res);
                this.personalPlanData = res.data;
            });
        },
        getCheckBoxContents() {
            api.getIEPCourses().then(res => {
                console.log('可以选取的课程');
                console.log(res);
                this.courseData = res.data.List;
            });
        },
        //获取已选中课程
        getCourseArray(obj) {
            let arr = Object.keys(obj);
            let newArr = [];
            for (let i = 0; i < arr.length; i++) {
                let num = Number(arr[i]);
                newArr.push(num);
            }
            return newArr;
        },
        groupChange(id) {
            if (this.isPeronalPlanFlag) {
                for (var i = 0; i < this.groupData.length; i++) {
                    if (this.groupData[i].groupID == id) {
                        this.patientData = this.groupData[i].groupPatients;
                        break;
                    }
                }
            }
        },
        //获取当前医生的病人组
        getGroups() {
            api.getDoctorPatientList().then(res => {
                var groupInfo = res.data.List;
                for (var i = 0, j = groupInfo.length; i < j; i++) {
                    var obj = {
                        'groupName': groupInfo[i].Name,
                        'groupID': groupInfo[i].ID,
                        'groupPatients': groupInfo[i].Agents
                    };
                    this.groupData.push(obj);
                }
            });
        },
        planCancel() {
            this.resetFormState();
        },
        //保存教学计划
        planSubmit() {
            this.planFormData.Template = 0;
            if (this.isPeronalPlanFlag) {
                this.planFormData.Type = 1;
            } else {
                this.planFormData.Type = 0;
            }
            if (this.planFormData.Courses.length == 0) {
                console.log('请选择课程后提交！');
                return;
            }
            if (this.planFormData.StudentID != '' && this.planFormData.StudentID != null) {
                this.planFormData.GroupID = null;
            }
            var params = this.planFormData;
            api.modifyPlan(params).then(res => {
                console.log('新的计划提交返回');
                console.log(res);
                if (res.Status) {
                    this.$message.success(res.Message);
                    this.requestGroupPlanData(1);
                    this.requestPersonalPlanData(1);
                } else {
                    this.$message.error(res.Message);
                }
            });
            this.resetFormState();

        },
        resetFormState() {
            this.planFormData = {
                ID: '',
                Title: "",
                Template: '',
                Type: '',
                StartDate: "",
                Courses: [],
                GroupID: '',
                StudentID: ''
            };
            this.patientData = [];
            this.addPlanDialogFlag = false;
        }
    },
    created: function () {
        api.setToken();
        this.requestPersonalPlanData(1);
        this.requestGroupPlanData(1);
        this.getCheckBoxContents();
        this.getGroups();

    },
    mounted() {
  
    }

};
</script>
<style scoped>
/***教学计划列表style***/

.tabs {
    position: relative;
    width: 100%;
    height: 626px
}
.mainContentWrap {
    position: relative;
    width: 100%;
    height: 100%;
}
.pageNavbar {
    position: absolute;
    left: -94px;
    top: 0;
    width: 1280px;
    height: 42px;
    border-bottom: 1px solid #cccccc;
}
.pageNavbar span {
    font-size: 16px;
    cursor: pointer;
    line-height: 42px;
}
.pageNavbar span:hover {
    color: rgb(66, 171, 216);
}
.severalBoxes {
    position: absolute;
    left: 0;
    top: 43px;
    width: 100%;
    height: 583px;
}

.tabs-content {
    position: absolute;
    width: 100%;
    height: 100%;
}
.tab-content {
    position: absolute;
    left: 106px;
    top: 0;
    width: 1080px;
    height: 583px;
}
.tabs-chose {
    position: absolute;
    top: 0;
    left: 0;
    width: 105px;
    height: 583px;
    border-right: 1px solid #eeeeee
}
.tabs-chose li {
    width: 105px;
    height: 70px;
    text-align: center;
    line-height: 70px;
    cursor: pointer;
}

.icon-msnui-cloud-upload {
    font-size: 60px
}

.tabs-chose .active {
    color: #48C4FC;
}

.planCenter-content {
    width: 100%;
    height: 583px;
    padding-left: 20px;
    padding-right: 20px;
}
.toolBox {
    width: 1020px;
    height: 34px
}
.item {
    position: relative;
    margin: 0 auto;
    width: 1020px;
    height: 104px;
    margin-bottom: 16px;
}

.planBox {
    position: absolute;
    top: 32px;
    right: 0;
    width: 100%;
    height: 72px;
    background-color: #E9F8FF;
    -webkit-border-radius: 6px;
    -moz-border-radius: 6px;
    border-radius: 6px;
}
.planBox p .techText{
    font-size: 14px;
}


.addWrap {
    float: right
}

.planBoxLeft {
    position: absolute;
    border-right: 1px dotted #30BCFC;
    width: 252px;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.planBoxRight {
    position: absolute;
    top: 0;
    left: 510px;
    width: 510px;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center
}
.tabsWrap {position: absolute;top: 0;left: 0;width: 100%;height: 583px}
.planItemDetails {position: absolute;top: 43px;left: 0;width: 100%;height: 583px;padding: 0 30px}
.grayBackground {position: absolute;top: 0;left: 0;width: 100%;height: 583px;padding-top: 5px;padding-bottom: 5px}
.iepmultiChose {width: 1030px;height: 553px;margin: 15px auto}
.choseBoxHeader {width: 100%;height: 42px;background-color: #23BAFF;color: #ffffff;font-size: 16px;font-weight: bold;line-height: 42px;border-radius: 4px 4px 0 0}
.choseBoxWrap {width: 100%;border-radius: 4px;height: 532px;overflow-y: scroll;background-color: white}
.choseTopic {display: inline-block;width: 378px;border-right: 1px solid #ffffff;text-align: center}
.checkBoxItem {display: inline-block;width: 138px;height: 42px;line-height: 42px;text-align: center}
.mouthItem {display: inline-block;width: 108px;height: 42px;line-height: 42px;text-align: center;}
.checkBoxItems {width: 100%;height: 42px;color: #6A6A6A;font-size: 14px;border-bottom: 1px solid #cccccc;line-height: 42px}
.chaptesBox:last-child {border-bottom: none}
.checkBoxItems .mouthItem:nth-child(1) {border-left: 1px solid #cccccc;}
.courseBox {}
.courseName {color: #323232;font-size: 16px;font-weight: bolder;margin-left: 20px}
.chaptName {display: inline-block;width: 368px;height: 42px;padding-left: 20px;line-height: 42px}
.chaptesBox {box-shadow: 0 2px 4px 0 rgba(0,0,0,.12), 0 0 6px 0 rgba(0,0,0,.04); border: 1px solid #EFEFEF;border-radius: 4px;width: 1020px;margin: 10px auto}
.submitBtn {margin-left: 5px}
.cardBox {
    width: 100%;
    height: 522px
}
.tableWrap {
    width: 100%;
    height: 480px;
}
.colorHeader {
    border-top: 4px solid RGBA(49, 187, 252, 1.00)
}

/***教学计划详情Style****/

.planWrap {
    position: relative;
    width: 100%;
    height: 100%;
}

.center-content {
    width: 1120px;
    margin: 0 auto;
    height: 540px;
}

.item {
    position: relative;
    width: 1020px;
    height: 102px;
    margin-bottom: 10px;
    margin-top: 10px;
    box-shadow: 0 2px 4px 0 rgba(0,0,0,.12), 0 0 6px 0 rgba(0,0,0,.04);
}

.titleBox {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 32px;
    background-color: #3BBDF9;
    -webkit-border-radius: 6px 6px 0 0;
    -moz-border-radius: 6px 6px 0 0;
    border-radius: 6px 6px 0 0;
    padding-left: 5px;
}
.titleBox p {
    font-size: 18px;
    color: #ffffff;
    font-weight: bold;
}
.titleBoxContent {
    width: 245px;
    height: 32px;
    text-align: center;
    line-height: 32px;
    font-size: 16px;
    color: #ffffff;
    font-weight: bold;
}
.planItemContent {
    position: absolute;
    top: 32px;
    left: 0;
    width: 100%;
    height: 70px;
    -webkit-border-radius: 0 0 6px 6px;
    -moz-border-radius: 0 0 6px 6px;
    border-radius: 0 0 6px 6px;
}
.planItemContentLeft {
    position: absolute;
    top: 0;
    left: 0;
    width: 250px;
    height: 100%;
    border-right: 1px dotted #30BCFC ;
    display: inline-flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.planItemContentRight {
    position: absolute;
    top: 0;
    left: 250px;
    width: 770px;
    height: 100%;
    padding-right: 20px;
    display: inline-flex;
    justify-content: flex-end;
    align-items: center;
}

.planBox {
    position: absolute;
    top: 32px;
    right: 0;
    width: 100%;
    height: 72px;
    background-color: #E9F8FF;
    -webkit-border-radius: 0 0 6px 6px;
    -moz-border-radius: 0 0 6px 6px;
    border-radius: 0 0 6px 6px;
}

.planBoxLeft {
    position: absolute;
    border-right: 1px dotted #30BCFC;
    width: 252px;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center
}

.planBoxRight {
    position: absolute;
    top: 0;
    left: 510px;
    width: 510px;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center
}

/*教学计划ItemStyle*/

.planItem-content {
    position: relative;
    width: 100%;
    height: 100%;
}
.item {
    position: relative;
    width: 1020px;
    height: 104px;
    -webkit-border-radius: 6px;
    -moz-border-radius: 6px;
    border-radius: 6px;
    margin-bottom: 20px;
}

.titleBox {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 32px;
    background-color: #3BBDF9;
}

.toolBox {
    margin-bottom: 5px;
    margin-top: 5px
}

.planBox {
    position: absolute;
    top: 32px;
    right: 0;
    width: 100%;
    height: 72px;
    background-color: #E9F8FF;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center
}

.planBoxLeft {
    position: absolute;
    border-right: 1px dotted #30BCFC;
    width: 252px;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center
}

.planBoxRight {
    position: absolute;
    top: 0;
    left: 510px;
    width: 510px;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center
}

/*教学计划主题、章节编辑*/
.course-content {
    position: relative;
    width: 100%;
    height: 100%;
}

.toolBox {
    margin-bottom: 10px;
    margin-top: 10px
}

.planBox {
    position: absolute;
    top: 32px;
    right: 0;
    width: 100%;
    height: 72px;
    background-color: #E9F8FF;
}

.courseContent {
    position: absolute;
    top: 104px;
    right: 0;
    width: 100%;
    height: 100px;
    background-color: #3BBDF9;
    -webkit-border-radius: 0 0 6px 6px;
    -moz-border-radius: 0 0 6px 6px;
    border-radius: 0 0 6px 6px;
}

.planBoxLeft {
    position: absolute;
    border-right: 1px dotted #30BCFC;
    width: 252px;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center
}

.planBoxRight {
    position: absolute;
    top: 0;
    left: 510px;
    width: 510px;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center
}
    .simbleBox {
        display: inline-block;
        width: 24px;
        height: 24px;
        background-image: url("../../assets/images/iep/默认圆.png");
        margin-top: 9px;
    }
    input[type=checkbox]:checked + label {
        background-image: url("../../assets/images/iep/对勾.png");
    }
    .checkBoxClass {
        display: inline-block;
        width: 2px;
        height: 2px;
        opacity: 0;
        cursor: pointer;
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
        filter: alpha(opacity=0);
    }

.addPlanFormCheckBox {
    display: inline-block;
    width: 18px;
    height: 18px;
    background-image: url("../../assets/images/serviceToolImg/默认选框.png");
}
.addCourseGroup input[type=checkbox]:checked + label {
    background-image: url("../../assets/images/serviceToolImg/选中选框.png");
}
    
</style>
