<template>
    <div class="main">
    
        <div class="pageNavbar">
            <span style="cursor: none;color: black">当前位置&nbsp;&nbsp;>&nbsp;&nbsp;</span>
            <span @click="backroute">{{ tabs[currentTab] }}&nbsp;&nbsp;>&nbsp;&nbsp;</span>
            <span v-if=" currentTab === 2 && !studentListVisible" @click="gobackTestList">评估列表&nbsp;&nbsp;>&nbsp;&nbsp;</span>
            <span v-if=" currentTab === 2 && studentListVisible && showTestStart">开始评测</span>
            <span v-show=" currentTab === 2 && !studentListVisible && reportAndResult">评测结果and评估报告&nbsp;&nbsp;>&nbsp;&nbsp;</span>
        </div>
        <div class="tabs" v-show="tabsShow">
            <div class="tabs-chose">
                <li v-for="(tab, index) in tabs" :class="{active : currentTab === index }" @click="currentTab = index">{{tab}}
                </li>
            </div>

            <div class="tabs-content">
                <!--动态-->
                <div v-show="currentTab === 0" class="tab-content">
                    <ServiceDyma></ServiceDyma>
                </div>
                <!--咨询管理-->
                <div v-show="currentTab === 1" class="tab-content">
                    <div class="center-content">
                        <div class="toolBox">
                            <el-button @click="toAddPaper(21)">
                                <Icon type="plus-round"></Icon>添加列表
                            </el-button>
                        </div>
                        <el-table :data="consultData" style="width: 100%">
                            <el-table-column type="index" width="50">
                            </el-table-column>

                            <el-table-column prop="Name" label="名称" width="180">
                            </el-table-column>
                            <el-table-column prop="TotalCount" label="已发送个数" width="180">
                            </el-table-column>
                            <el-table-column prop="FinishedCount" label="已完成个数">
                            </el-table-column>
                            <el-table-column prop="CreatedOn" label="创建时间">
                            </el-table-column>

                            <el-table-column label="操作">
                                <template scope="scope">
                                    <el-button size="small" @click="checkPaper(scope.$index, scope.row)">查看填写结果</el-button>
                                    <el-button size="small" type="danger" @click="sendtoPaticent(scope.$index, scope.row)">发放</el-button>
                                </template>
                            </el-table-column>

                        </el-table>
                    </div>
                </div>
                <!--评测管理-->
                <div v-show="currentTab === 2" class="tab-content">
                    <div class="center-content">
                        <!--<div class="pageTrack">-->
                        <!--<router-link>评估列表</router-link>-->
                        <!--<router-link></router-link>-->
                        <!--</div>-->
                        <div class="testList">
                            <div v-if="studentListVisible">
                                <div class="toolBox">
                                    <el-button @click="addTestPaper">
                                        <Icon type="plus-round"></Icon>新建评估表
                                    </el-button>
                                </div>
                                <el-card class="cardBox colorHeader" :body-style="{ padding: '0px'}">
                                    <div class="tableWrap">
                                        <el-table :data="testPaperListData" style="width: 100%">
                                            <el-table-column type="index" width="70">
                                            </el-table-column>

                                            <el-table-column prop="Name" label="名称" width="160">
                                            </el-table-column>

                                            <el-table-column prop="PackageName" label="课程包名称">
                                            </el-table-column>

                                            <el-table-column prop="CreatedOn" label="创建时间">
                                            </el-table-column>

                                            <el-table-column label="操作">
                                                <template scope="scope">
                                                    <el-button size="small" @click="startTest(scope.$index, scope.row)">开始评测</el-button>
                                                    <el-button size="small" type="danger" @click="checkTestPaticent(scope.$index, scope.row)">查看评测的病人</el-button>
                                                </template>
                                            </el-table-column>

                                        </el-table>
                                    </div>
                                    <el-pagination layout="prev, pager, next" @current-change="testPaperListChange" :page-size="10" :total="testPaperTotal" style="float:right;"></el-pagination>

                                </el-card>
                            </div>
                            <div v-if="!studentListVisible" class="testStudent" style="z-index: 100">

                                <!--<el-dialog title="已评估的学生" v-model="testedPatientListVisible" :close-on-click-modal="false" size="large" @close="testedPatientListClose">-->

                                <el-table :data="testedPatientListData" style="width: 100%">
                                    <el-table-column type="index" width="60">
                                    </el-table-column>

                                    <el-table-column prop="ExamName" label="评测名称" width="120">
                                    </el-table-column>

                                    <el-table-column prop="Name" label="姓名" width="80">
                                    </el-table-column>

                                    <el-table-column prop="Status" label="状态" width="100">
                                        <template scope="scope">
                                            <span>{{scope.row.Status?'已完成':'未完成'}}</span>
                                        </template>
                                    </el-table-column>

                                    <el-table-column prop="Sex" label="性别" width="80">
                                        <template scope="scope">
                                            <span>{{scope.row.Sex?'男':'女'}}</span>
                                        </template>
                                    </el-table-column>

                                    <el-table-column prop="PackageName" label="课程" width="160">
                                    </el-table-column>

                                    <el-table-column prop="Summary" label="总结" width="160">
                                    </el-table-column>

                                    <el-table-column label="操作">
                                        <template scope="scope">
                                            <el-button size="small" type="danger" @click="checkPacientTestDetail(scope.$index, scope.row)">查看评测结果</el-button>

                                            <el-button size="small" type="danger" @click="checkPacientTestReport(scope.$index, scope.row)">查看评估报告</el-button>
                                        </template>
                                    </el-table-column>

                                </el-table>

                                <el-pagination layout="prev, pager, next" @current-change="testedPatientListNextPage" :page-size="10" :total="testedPatientListTotal" style="float:right;"></el-pagination>

                            </div>
                        </div>

                    </div>
                </div>
                <!--训练管理-->
                <div v-show="currentTab === 3">
                    <div class="center-content">
                        <div class="toolBox">
                            <el-button @click="toAddPaper(41)">
                                <Icon type="plus-round"></Icon>添加列表
                            </el-button>
                        </div>
                        <el-table :data="trainingData" style="width: 100%">
                            <el-table-column type="index" width="50">
                            </el-table-column>

                            <el-table-column prop="Name" label="名称" width="180">
                            </el-table-column>
                            <el-table-column prop="TotalCount" label="已发送个数" width="180">
                            </el-table-column>
                            <el-table-column prop="FinishedCount" label="已完成个数">
                            </el-table-column>
                            <el-table-column prop="CreatedOn" label="创建时间">
                            </el-table-column>

                            <el-table-column label="操作">
                                <template scope="scope">
                                    <el-button size="small" @click="checkPaper(scope.$index, scope.row)">查看填写结果</el-button>
                                    <el-button size="small" type="danger" @click="sendtoPaticent(scope.$index, scope.row)">发放</el-button>
                                </template>
                            </el-table-column>

                        </el-table>
                    </div>

                </div>
                <!--随访中心-->
                <div v-show="currentTab === 4">
                    <vueTab :tabtitles="['反馈表','复查表','关心提醒']" :current-page="1">
                        <div class="tab-content-container">
                            <div class="center-content">

                                <div class="toolBox">
                                    <el-button @click="toAddPaper(11)">
                                        <Icon type="plus-round"></Icon>添加列表
                                    </el-button>

                                </div>
                                <el-table :data="feedbackData" style="width: 100%">
                                    <el-table-column type="index" width="50">
                                    </el-table-column>

                                    <el-table-column prop="Name" label="名称" width="180">
                                    </el-table-column>
                                    <el-table-column prop="TotalCount" label="已发送个数" width="180">
                                    </el-table-column>
                                    <el-table-column prop="FinishedCount" label="已完成个数">
                                    </el-table-column>
                                    <el-table-column prop="CreatedOn" label="创建时间">
                                    </el-table-column>

                                    <el-table-column label="操作">
                                        <template scope="scope">
                                            <el-button size="small" @click="checkPaper(scope.$index, scope.row)">查看填写结果</el-button>
                                            <el-button size="small" type="danger" @click="sendtoPaticent(scope.$index, scope.row)">发放</el-button>
                                        </template>
                                    </el-table-column>

                                </el-table>
                            </div>
                        </div>
                        <div class="tab-content-container">
                            <div class="center-content">

                                <div class="toolBox">
                                    <el-button @click="toAddPaper(12)">
                                        <Icon type="plus-round"></Icon>添加列表
                                    </el-button>

                                </div>
                                <el-table :data="reviewData" style="width: 100%">
                                    <el-table-column type="index" width="50">
                                    </el-table-column>

                                    <el-table-column prop="Name" label="名称" width="180">
                                    </el-table-column>
                                    <el-table-column prop="TotalCount" label="已发送个数" width="180">
                                    </el-table-column>
                                    <el-table-column prop="FinishedCount" label="已完成个数">
                                    </el-table-column>
                                    <el-table-column prop="CreatedOn" label="创建时间">
                                    </el-table-column>

                                    <el-table-column label="操作">
                                        <template scope="scope">
                                            <el-button size="small" @click="checkPaper(scope.$index, scope.row)">查看填写结果</el-button>
                                            <el-button size="small" type="danger" @click="sendtoPaticent(scope.$index, scope.row)">发放</el-button>
                                        </template>
                                    </el-table-column>

                                </el-table>
                            </div>
                        </div>
                        <div class="tab-content-container">
                            <div class="center-content">

                                <div class="toolBox">
                                    <el-button @click="toAddPaper(13)">
                                        <Icon type="plus-round"></Icon>添加列表
                                    </el-button>

                                </div>
                                <el-table :data="remindData" style="width: 100%">
                                    <el-table-column type="index" width="80">
                                    </el-table-column>

                                    <el-table-column prop="Name" label="名称" width="180">
                                    </el-table-column>
                                    <el-table-column prop="TotalCount" label="已发送个数" width="180">
                                    </el-table-column>
                                    <el-table-column prop="FinishedCount" label="已完成个数">
                                    </el-table-column>
                                    <el-table-column prop="CreatedOn" label="创建时间">
                                    </el-table-column>

                                    <el-table-column label="操作">
                                        <template scope="scope">
                                            <el-button size="small" @click="checkPaper(scope.$index, scope.row)">查看填写结果</el-button>
                                            <el-button size="small" type="danger" @click="sendtoPaticent(scope.$index, scope.row)">发放</el-button>
                                        </template>
                                    </el-table-column>
                                </el-table>

                            </div>
                        </div>
                    </vueTab>
                </div>
            </div>
        </div>
        <router-view :key="key"></router-view>
    
        <el-dialog title="发送问卷" v-model="sendToPaticentVisible" :close-on-click-modal="false" @close="resetPatientList">
            <el-select v-model="selectedPacientIDS" placeholder="请选择小组" @change="filterPacient">
                <el-option v-for="(item, index) in selectedGroup" :key="item.groupName" :label=item.groupName :value=index>
                </el-option>
            </el-select>
    
            <el-select v-model="pacientsIDS" placeholder="请选择患者" ref="pacientesSelecter">
                <el-option v-for="(item, index) in selectedGroupPacientes" :key="item.Name" :label=item.Name :value=item.PatientID>
                </el-option>
            </el-select>
    
            <div slot="footer" class="dialog-footer">
                <el-button @click.native="sendToPaticentVisible = false">返回</el-button>
                <el-button icon="d-arrow-right" type="primary" class="transBtn" @click="sendToPacientSubmit()">发送</el-button>
            </div>
        </el-dialog>
    
        <el-dialog title="选择患者" v-model="choseToTestVisible" :close-on-click-modal="false" @close="resetChosePatientTest">
    
            <el-select v-model="selectedPacientIDS" placeholder="请选择小组" @change="filterPacient">
                <el-option v-for="(item, index) in selectedGroup" :key="item.groupName" :label=item.groupName :value=index>
                </el-option>
            </el-select>
    
            <el-select v-model="choseToTestPatient" placeholder="请选择患者">
                <el-option v-for="(item, index) in selectedGroupPacientes" :key="item.Name" :label=item.Name :value=item.ID>
                </el-option>
            </el-select>
    
            <div slot="footer" class="dialog-footer">
                <el-button @click.native="choseToTestVisible = false">返回</el-button>
                <el-button type="primary" class="transBtn" @click="choseToTestSubmit()">评测开始</el-button>
            </div>
        </el-dialog>
    
        <el-dialog title="已发送问卷" v-model="replyPatientListVisible" :close-on-click-modal="false">
            <el-table :data="editedPaperData" style="width: 100%">
                <el-table-column type="index" width="50">
                </el-table-column>
    
                <el-table-column prop="PatientName" label="姓名" width="60">
                </el-table-column>
    
                <el-table-column prop="Status" label="状态" width="100">
                    <template scope="scope">
                        <span>{{scope.row.Status?'已完成':'未完成'}}</span>
                    </template>
                </el-table-column>
    
                <el-table-column prop="PaperName" label="表名" width="160">
                </el-table-column>
    
                <el-table-column prop="CreatedOn" label="创建时间" show-overflow-tooltip width="130">
                </el-table-column>
    
                <el-table-column label="操作">
                    <template scope="scope">
                        <el-button size="small" type="danger" @click="previewEditedForm(scope.$index, scope.row)">查看</el-button>
                    </template>
                </el-table-column>
    
            </el-table>
    
            <el-pagination layout="prev, pager, next" @current-change="reslutCurrentChange" :page-size="10" :total="resultTotal" style="float:right;"></el-pagination>
    
            <!--<div slot="footer" class="dialog-footer">-->
                <!--<el-button @click.native="replyPatientListVisible = false">返回</el-button>-->
            <!--</div>-->
    
        </el-dialog>

    
        <el-dialog v-model="previewFormVisible" size="large" :close-on-click-modal="false">
            <div class="paperContent">
                <QuestionPaper></QuestionPaper>
            </div>
            <div slot="footer" class="dialog-footer">
                <el-button @click.native="previewFormVisible = false">返回</el-button>
            </div>
        </el-dialog>
    
        <el-dialog title="模板列表" v-model="createQuestionnaireVisible" :close-on-click-modal="false">
    
            <el-table :data="paperTmeplateData" style="width: 100%">
                <el-table-column type="index" width="50">
                </el-table-column>
    
                <el-table-column prop="Name" label="名称" width="180">
                </el-table-column>
    
                <el-table-column prop="Comments" label="内容" width="180">
                </el-table-column>
    
                <el-table-column label="操作">
                    <template scope="scope">
                        <el-button size="small" @click="addForm(scope.$index, scope.row)">添加表格</el-button>
                        <el-button size="small" type="danger" @click="previewForm(scope.$index, scope.row)">查看</el-button>
                    </template>
                </el-table-column>
    
            </el-table>
    
            <div slot="footer" class="dialog-footer">
                <el-button @click.native="createQuestionnaireVisible = false">返回</el-button>
            </div>
    
        </el-dialog>
    
        <el-dialog title="模板列表" v-model="addTestPaperVisible" :close-on-click-modal="false" @close="testPaperCancel">
            <div class="addTestFormWrap">
                <el-form ref="addTestform" :model="testFormData" label-width="80px">
                    <el-form-item label="名称">
                        <el-input v-model="testFormData.Name" type="small"></el-input>
                    </el-form-item>
                    <el-form-item label="课程包">
                        <el-select v-model="testFormData.PaperPackageID" placeholder="请选择课程包">
                            <el-option v-for="o in testPaperData" :label="o.Name" :value="o.ID"></el-option>
                        </el-select>
                    </el-form-item>
                </el-form>
            </div>
            <div class="addTestsubmit">
                <el-button @click.native="submitTestPaper">确认</el-button>
            </div>
        </el-dialog>
    
        <el-dialog title="" v-model="testPaperContentVisible" :close-on-click-modal="false">
    
            <el-form>
                <div v-for="paper in testPaperContentData.Papers">
                    <h2>试卷名: {{paper.Name}}</h2>
                    <div v-for="section in paper.Sections">
                        <h3>章节: {{section.Name}}</h3>
                        <div v-for="question in section.Questions">
                            <p>{{ question.Description}}</p>
                            <p>{{ question.ID}}</p>
                            <el-radio-group v-model="questionAnswers.Result">
                                <el-radio v-for="option in question.Options" :key="option.Sequence" :label="option.Sequence">{{option.Name}}</el-radio>
                            </el-radio-group>
    
                        </div>
                    </div>
                </div>
            </el-form>
        </el-dialog>

    
    </div>
</template>
<script>
import QuestionPaper from '../../components/QuestionPaper.vue';
import ServiceDyma from './MyServiceDyma/MyServiceDyma.vue';
import vueTab from '../../components/vue-tab.vue';
import { drProfile, getDoctorPatientList, getDrPaperSummary, filterPaperTmeplate, addPapertoDr, paperDetails, getPaperResult, getDrPaperSendOut, sendPaperToPatient, requestCourseList, addTestPaper, requestTestList, getTestPaperContent, sendTestPaper, requestTestMembers, getPacientTestDetails, getPacientTestReport, chosePatientToTest } from '../../api/api';
export default {
    name: 'ServiceTool',
    components: {
        ServiceDyma,
        QuestionPaper,
        vueTab
    },
    computed: {
        key() {
            console.log(this.$route.name !== undefined ? this.$route.name + +new Date() : this.$route + +new Date());
            if(this.$router.currentRoute.path == '/serviceTool'){
                this.tabsShow = true;
                this.jumptoIepPlan();
            }
            return this.$route.name !== undefined ? this.$route.name + +new Date() : this.$route + +new Date();
        }
    },
    data() {
        return {
            currentTab: 0,
            tabs: ['动态', '咨询管理', '评测管理', '训练管理', '随访中心'],
            zxPage: 1,
            pcPage: 1,
            xlPage: 1,
            fkbPage: 1,
            fcPage: 1,
            gxPage: 1,
            resultPage: 1,
            resultTotal: '',
            studentListVisible: true,
            createQuestionnaireVisible: false,
            replyPatientListVisible: false,
            sendToPaticentVisible: false,
            previewFormVisible: false,
            addTestPaperVisible: false,
            testPaperContentVisible: false,
            testedPatientListVisible: false,
            reportAndResult: false,
            showTestStart: false,
            consultData: [], // 咨询管理
            paperConsultURL: '',
            testPaperListData: [], // 评测管理
            testPaperTotal: 1,
            testPaperCurrentPage: 1,
            paperEvaluationURL: '',
            trainingData: [], // 训练管理
            paperTrainingURL: '',
            feedbackData: [], // 反馈表
            paperFeedbackURL: '',
            reviewData: [], // 负责复评
            paperReviewURL: '',
            remindData: [], // 关心提醒,
            paperRemindURL: '',
            testPaperContentData: [], // 评测内容data
            paperTmeplateData: [],
            testPaperData: [],
            editedPaperData: [],
            patientOptions: [],
            selectedOptions: '',
            activeName: 'first',
            sendListID: '',
            selectedGroup: this.$store.state.mystudent.patientList, // 患者小组数组
            selectedGroupPacientes: [], // 小组中患者数组
            pacientsIDS: [],
            selectedPacientIDS: '',
            tabsShow: true,
            paperID: '',
            testFormData: {
                Name: '',
                PaperPackageID: ''
            },
            questionAnswers: [
                {
                    QuestionID: '',
                    Result: ''
                }
            ],
            testedPatientListData: [],
            examID: '',
            testedPatientListTotal: 1,
            testedPatientCurrentPage: 1,
            choseToTestVisible: false,
            choseToTestPatient: '',
            paperPackageID: '',
            testID: ''
        };
    },
    methods: {
        backroute() {
            console.log('is here 1');
            this.currentTab = 2;
            if (this.showTestStart) {
                console.log('is here 2');
                this.showTestStart = false;
            } else {
                console.log('is here 3');
                this.studentListVisible = true;
            }
            this.$router.push('/serviceTool');
        },
        gobackTestList() {
            this.currentTab = 2;
            this.reportAndResult = false;
            this.studentListVisible = false;
            this.$router.push('/serviceTool');
        },
        jumptoIepPlan() {  // route变化触发
            this.$router.push('/serviceTool');
        },
        checkPacientTestDetail(index, row) {
            let testID = row.ID;
            let patientID = row.PatientAgentID;
            this.testedPatientListVisible = false;
            this.reportAndResult = true;
            this.$router.push({ path: `/serviceTool/testResult/${testID}/patientID/${patientID}` });
            this.tabsShow = false;
        },
        checkPacientTestReport(index, row) {
            let testID = row.ID;
            let patientID = row.PatientAgentID;
            this.testedPatientListVisible = false;
            this.tabsShow = false;
            this.reportAndResult = true;
            this.$router.push({ path: `/serviceTool/testReport/${testID}/patientID/${patientID}` });
        },
        handleClick() {
        },
        addTestPaper() {
            this.addTestPaperVisible = true;
            requestCourseList().then(res => {
                console.log('添加模板');
                console.log(res);
                this.testPaperData = res.List;
            });
        },
        submitTestPaper() {
            let params = this.testFormData;
            addTestPaper(params).then(res => {
                if (res.Code === 0) {
                    this.$message.success('成功');
                    this.addTestPaperVisible = false;
                    this.getTestList(this.testedPatientCurrentPage);
                } else {
                    this.$message.err('失败');
                }
            });
        },
        resetChosePatientTest() {
            this.selectedPacientIDS = [];
            this.choseToTestPatient = '';
        },
        resetPatientList() {
            this.selectedPacientIDS = [];
            this.pacientsIDS = [];
        },
        testPaperCancel() {
            this.testFormData = {
                Name: '',
                PaperPackageID: ''
            }
        },
        testPaperListChange(currentPage) {
            this.testPaperCurrentPage = currentPage;
            this.getTestList(this.testPaperCurrentPage);
        },
        startTest(index, row) {
            this.paperPackageID = row.PaperPackageID;
            this.testID = row.ID;
            this.showTestStart = true;
            this.choseToTestVisible = true;
        },
        choseToTestSubmit() {
            let params = {
                ExamID: this.testID,
                PatientAgentID: this.choseToTestPatient
            };
            chosePatientToTest(params).then(res => {
                console.log('患者信息');
                console.log(this.selectedGroup);
                console.log(res);
                if (res.Code === 0) {
                    this.choseToTestVisible = false;
                    this.tabsShow = false;
                    this.$router.push({ path: `/serviceTool/testPaper/${res.Msg}/course/${this.paperPackageID}/patientID/${this.choseToTestPatient}` });
                }
            });
        },
        checkTestPaticent(index, row) {
            this.examID = row.ID;
            console.log(this.examID);
            this.requestTestPaticent(1);
        },
        requestTestPaticent(pageIndex) {
            let params = {
                ExamID: this.ExamID,
                PageIndex: pageIndex,
                PageSize: 10
            };
            requestTestMembers(params).then(res => {
                console.log('已评测的学生');
                console.log(res);
                this.testedPatientListData = res.Records;
                this.testedPatientListTotal = res.Total;
                this.studentListVisible = false;
            });
        },
        testedPatientListClose() {
            this.testedPatientListData = '';
        },
        testedPatientListNextPage(currentPage) {
            this.testedPatientCurrentPage = currentPage;
            this.requestTestPaticent(this.testedPatientCurrentPage);
        },
        previewEditedForm(index, row) {
            var resultID = row.ID;
            getPaperResult(resultID).then(res => {
                this.$store.dispatch('addPaper', res.data);
                this.previewFormVisible = true;
            });
        },
        previewForm(index, row) {
            var resultID = row.ID;
            paperDetails(resultID).then(res => {
                this.$store.dispatch('addPaper', res.data);
                this.previewFormVisible = true;
            });
        },
        addForm(index, row) {
            var id = row.ID;
            addPapertoDr(id).then(res => {
                var code = res.Code;
                switch (code) {
                    case 0:
                        this.$message.success(res.Msg);
                        break;
                    case 1:
                        this.$message.warning(res.Msg);
                        break;
                    case 2:
                        this.$message.error(res.Msg);
                        break;
                }
                this.createQuestionnaireVisible = false;
            });
        },
        //      previewForm(index, row) {
        //        var id = row.ID;
        //        paperDetails(id).then(res => {
        //          var obj = res.data;
        //          this.$router.push({path: '/questionPaper'});
        //          this.$store.dispatch('noEditedAction');
        //          this.$store.dispatch('emptyPaper');
        //          this.$store.dispatch('addPaper', obj);
        //        });
        //      },
        toAddPaper(value) {
            this.createQuestionnaireVisible = true;
            filterPaperTmeplate(value).then(res => {
                console.log('添加模板');
                console.log(res);
                this.paperTmeplateData = res.data.List;
            });
        },
        reslutCurrentChange(val) {
            this.resultPage = val;
            this.getDrPaperSendList(this.sendListID, this.resultPage);
        },
        checkPaper(index, row) {
            this.replyPatientListVisible = true;
            this.sendListID = row.ID;
            var id = row.ID;
            this.getDrPaperSendList(id, this.resultPage);
        },
        getDrPaperSendList(id, index) {
            getDrPaperSendOut(id, index, 10).then(res => {
                console.log('获取结果ID');
                console.log(res.data);
                this.resultTotal = res.data.Total;
                this.editedPaperData = res.data.Records;
            });
        },
        filterPacient(val) {
            this.selectedGroupPacientes = this.selectedGroup[val].groupPatients;
            this.pacientsIDS = [];
        },
        sendtoPaticent(index, row) {
            this.paperID = row.ID;
            this.sendToPaticentVisible = true;
        },
        sendToPacientSubmit() {
            var params = {
                PaperID: this.paperID,
                Patients: this.pacientsIDS
            };
            sendPaperToPatient(params).then(res => {
                console.log('发送表格结果');
                console.log(res);
                let code = res.Code;
                switch (code) {
                    case 0:
                        this.$message.success('发送成功');
                        break;
                    case 1:
                        this.$message.warning('指定的问卷不存在');
                        break;
                }
                this.sendToPaticentVisible = false;
            });
        },
        handleChange(val) {
            this.selectedOptions = val;
        },
        getPaperData(type, data) {
            var _this = this;
            getDrPaperSummary(type).then(res => {
                _this.paperURL = type;
                data = res.data.List;
            });
        },
        getTestList(pageIndex) {
            let params = {
                PageIndex: pageIndex,
                PageSize: 10
            };
            requestTestList(params).then(res => {
                console.log('评测列表');
                console.log(res);
                this.testPaperListData = res.Records;
                this.testPaperTotal = res.Total;
            });
        },
        requestInitData() {
            this.getTestList(1);    // 评测管理
            getDrPaperSummary(21).then(res => {
                this.paperURL = 21;
                console.log('评测管理的值');
                console.log(res);
                console.log(res.data.List);
                this.consultData = res.data.List;
            });
            getDrPaperSummary(41).then(res => {
                this.paperURL = 41;
                this.trainingData = res.data.List;
            });
            getDrPaperSummary(11).then(res => {
                this.paperURL = 11;
                this.feedbackData = res.data.List;
            });
            getDrPaperSummary(12).then(res => {
                this.paperURL = 12;
                this.reviewData = res.data.List;
            });
            getDrPaperSummary(13).then(res => {
                this.paperURL = 13;
                this.remindData = res.data.List;
            });
            if (!selectedGroup) {  //如果从vuex取值失败，重新获取患者列表数据
                getDoctorPatientList().then(res => {
                    console.log('如果从vuex取值失败，重新获取患者列表数据');
                    console.log(res);
                    this.selectedGroup = res.data;
                });
            }

        }
    },
    mounted() {
        this.requestInitData();
    }
};
</script>

<style scoped>
.main {
    position: absolute;
    left: 0;
    top: 0;
}

.pageTrack {
    position: absolute;
    width: 100%;
    height: 40px
}

.tabs {
    position: absolute;
    top: 42px;
    left: 0;
    width: 100%;
    height: 583px;
    z-index: 5;
}

.tabs-chose {
    position: absolute;
    width: 94px;
    height: 626px;
    background-color: #EEEFF0;
    border-right: 1px solid #EFEFEF;
}

.tabs-content {
    position: absolute;
    left: 94px;
    top: 0;
    width: 1185px;
    height: 626px;
}

.tabs-chose li {
    width: 94px;
    height: 60px;
    background-color: RGBA(238, 239, 240, 1.00);
    display: flex;
    align-items: center;
    justify-content: center;
}

.tabs-chose .active {
    background-color: #ffffff;
    color: RGBA(32, 160, 255, 1.00);
    border-left: 6px solid #31BBFC;
}

.center-content {
    width: 1080px;
    margin: 20px;
}

.toolBox {
    margin-bottom: 20px;
}

.paticentLogo {
    width: 60px;
    height: 60px;
    border-radius: 30px
}

.paperContent {
    width: 100%;
    max-height: 600px;
    overflow-y: hidden
}

.addTestFormWrap {
    width: 550px;
    margin: 0 auto
}

.addTestsubmit {
    width: 550px;
    text-align: center;
    margin: 0 auto
}

.colorHeader {
    border-top: 4px solid RGBA(49, 187, 252, 1.00)
}

.cardBox {
    width: 100%;
    height: 540px
}
.tableWrap {
    width: 100%;
    height: 442px;
}

.pageNavbar {
    position: absolute;
    left: 0;
    top: 0;
    width: 1280px;
    height: 42px;
    border-bottom: 1px solid #cccccc;
}
.pageNavbar span {
    font-size: 16px;
    cursor: pointer;
    line-height: 42px;
}
.pageNavbar span:hover {
    color: rgb(66, 171, 216);
}
</style>
