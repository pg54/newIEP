<template>
    <div class="dataAnalysisBox">
        <div class="slidebarOne">
            <el-select v-model="groupValue" placeholder="请选择" @change="getPacientList">
                <el-option v-for="(item, index) in groups" :key="item.groupName" :label="item.groupName" :value="index">
                </el-option>
            </el-select>
            <li v-for="(ele, index) in patientIDs" class="pacientLink" :class="{active : currentTab === index }"
                @click="selectedPaticent(index)">
                {{ele.Name}}
            </li>
        </div>
        <div class="contentOne">
            <div class="center-content">
                <div>
                    <el-select v-model="packageID" placeholder="请选择课程包" style="width: 474px">
                        <el-option v-for="o in packageData" :label="o.Name" :value="o.ID" ></el-option>
                    </el-select>

                    <el-button @click="refreshEcharts">确定</el-button>

                </div>

                <echarts></echarts>
            </div>
        </div>
    </div>
</template>
<script>
    import echarts from '../../components/echarts.vue';
    import api from '../../api/index.js'

    export default {
        name: 'dataAnalysis',
        components: {
            echarts
        },
        computed: {
            groups: function () {
                return this.$store.state.mystudent.patientList;
            }
        },
        data() {
            return {
                groupValue: 0, // 选中的组,默认第一组
                currentTab: 0, // 选中的患者
                patientIDs: [],
                patientID: null, // 选中的患者ID
                packageData: [], // package的数据源
                packageID: null, // 选中的packageID
                xData: [], //x轴数据
                linesData: [], //多个{}的数组，{}为单条线
            }
        },
        methods: {
            getPacientList(value) {
                this.patientIDs = this.groups[value].groupPatients;
                console.log('foo');
                console.log(this.patientIDs)
                this.selectedPaticent(0);
            },
            selectedPaticent(index) {
                console.log('选中的患者ID');
                console.log(this.patientIDs[index].ID);
                this.patientID = this.patientIDs[index].ID
                this.currentTab = index;
            },
            refreshEcharts() {
                let params = {
                    PatientAgentID: this.patientID,
                    PackageID: this.packageID
                }
                api.echartPackage(params)
                    .then( res => {
                        console.log('请求数据');
                        console.log(res.data.List);
                        this.dataProcessing(res.data.List);
                    })
            },
            dataProcessing(arr) {

                let titleArr = []
                arr[0].History.forEach(function(ele,index) {
                    let str = '第' + String(index+1) + '次评测';
                    titleArr.push(str);
                })

                let xData = [];
                arr.map( ele => {
                    xData.push(ele.Name)
                })

                let length = arr[0].History.length;
                let bigData = []
                for (let i=0;i<length;i++) {
                    let obj = {
                        name: '第' + String(i+1) + '次评测',
                        type: 'line',
                        stack: '总量',
                        data: []
                    }
                    bigData.push(obj);
                }
                for (let i=0;i<length;i++) {
                    bigData[i].data.push(arr[0].History[i].Score);
                    bigData[i].data.push(arr[1].History[i].Score);
                }

                console.log(titleArr);
                console.log(bigData);
                console.log(xData);

            },
        },
        created() {
            this.getPacientList(0) //默认选中第一组患者
            api.requestCourseList().then(res => {
                this.packageData = res.List;
            });

        }
    };
</script>
<style scoped>
    /*@import '../../../src/assets/css/template/index.css';*/

    .dataAnalysisBox {
        width: 100%;
        height: 626px;
        position: absolute
    }
    .slidebarOne {
        width: 94px;
        height: 584px;
        position: absolute;
        border-right: 1px solid #cccccc;
        background-color: #EEEFF0;
    }

    .slidebarOne li {
        width: 93px;
        height: 40px;
        text-align: center;
        line-height: 40px;
        cursor: pointer;
    }

    .contentOne {
        width: 1186px;
        height: 584px;
        position: absolute;
        left: 94px;
    }

    .slidebarOne .active {
        color: #48C4FC;
        border-left: 4px solid #48C4FC;
        background-color: #FEFFFF;
    }
    .center-content {
        width: 100%;
        height: 584px;
        padding: 5px 20px;
    }
</style>
