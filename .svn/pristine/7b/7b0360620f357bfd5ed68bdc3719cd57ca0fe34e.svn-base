<template>
    <div class="cpepTemplate">
        <table class="tg">
            <thead>
                <tr>
                    <th class="tg-baqh" colspan="4">任务项目</th>
                    <th class="tg-baqh" colspan="3">材料</th>
                    <th class="tg-baqh" colspan="7">实施方法</th>
                    <th class="tg-baqh" colspan="3">领域</th>
                    <th class="tg-baqh" colspan="7">评分</th>
                </tr>
            </thead>
            <template v-for="unit in submitData">
                <tr>
                    <td class="tg-yw4l leftAlign bondText" colspan="24">{{unit.material}}</td>
                </tr>
                <template v-for="ele in unit.sameArr">
                    <tr>
                        <td class="tg-yw4l" colspan="4">{{ele.Number}}:{{ele.Name}}</td>
                        <td class="tg-yw4l" colspan="3">{{ ele.Material}}</td>
                        <td class="tg-yw4l" colspan="7">{{ ele.Description}}</td>
                        <td class="tg-yw4l" colspan="3">{{ ele.Domain}}</td>
                        <td class="tg-yw4l" colspan="7">
                            <p v-for="item in ele.Options" class="optionBox">
                                <input v-if="!isResultPage" type="radio" :value="item.Option" :name="ele.ID" :id="item.ID" class="radioclass" @change="selectOption(item.QuestionID,item.Option)">
                                <input v-else type="radio" :value="item.Option" :id="item.ID" class="radioclass" v-model="ele.Result">
                                <label :for="item.ID" class="simbleBox"></label>
                                <label :for="item.ID" class="clickLabel">
                                        <span>{{item.Option}}:&nbsp;&nbsp;{{item.Description}}</span>
                                    </label>
                            </p>
                        </td>
                    </tr>
                </template>
            </template>
        </table>
        <el-button v-if="!isResultPage" style="position: fixed;top: 90%;left: calc(50% + 500px)" @click.native="submitResultContent">提交测试</el-button>
    </div>
</template>



<script>
    import api from '../api/index.js';
    export default {
        name: 'serviceCPEP',
        props: ['cpepData', 'pacientID', 'isResultPage'],
        data() {
            return {
                frstMaterialType: '',
                //difMaterialTypeEle: '',
                selectedChoses: [],
                numberIndex: 1,
                resultData: []
            }
        },
        computed: {
            submitData: function () {
                let arr = this.cpepData.map(function (ele) {
                    return ele.MaterialType;
                }).filter(function (element, index, arr) {
                    return arr.indexOf(element) === index;
                }).map(function (ele) {
                    let sameMaterial = []
                    let obj = {
                        material: ele,
                        sameArr: sameMaterial
                    }
                    return obj
                });
                this.cpepData.forEach(function (ele) {
                    for (let i = 0; i < arr.length; i++) {
                        if (arr[i].material === ele.MaterialType) {
                            arr[i].sameArr.push(ele)
                        }
                    }
                })
                return arr
            },
            totalQuestion: function () {
                return this.cpepData.length;
            },
            resultPaperID: function () {
                return this.cpepData[0].PaperID
            }
        },
        methods: {
            selectOption(id, option) {
                if (!this.checkInResultData(id)) {
                    let obj = {
                        Result: option,
                        QuestionID: id
                    }
                    this.resultData.push(obj)
                }
            },
            checkInResultData(id) {
                let arr = this.resultData
                for (let i = 0; i < arr.length; i++) {
                    if (arr[i].QuestionID === id) {
                        return true
                    } else {
                        return false
                    }
                }
            },
            setNowMaterialType(param) {
                if (param.MaterialType === this.frstMaterialType) {
                    return true
                } else {
                    this.frstMaterialType = param.MaterialType;
                    return false;
                }
            },
            submitResultContent() {
                let nowNumber = this.resultData.length;
                let lastNumber = this.totalQuestion - nowNumber;
                if (lastNumber === 0) {
                    this.postQuestionResult()
                } else {
                    this.$confirm(`剩余${lastNumber}道问题未选择，如点击确认，未选择问题将默认提交,`, '提示', {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(() => {
                        this.postQuestionResult()
                    }).catch(() => {
                        this.$message({
                            type: 'info',
                            message: '已取消提交'
                        });
                    });
                }
            },
            postQuestionResult() {
                let params = {
                    PatientAgentID: this.pacientID,
                    PaperID: this.resultPaperID,
                    Result: this.resultData
                }
                api.postCPEPResult(params).then(res => {
                    if (res.data.Status) {
                        this.$message.success(res.data.Msg)
                    } else {
                        this.$message.error(res.data.Msg)
                    }
                })
            }
        },
        created() {

        }
    }

</script>
<style scoped>
    .tg {
        border-collapse: collapse;
        border-spacing: 0;
    }

    .tg td {
        font-family: Arial, sans-serif;
        font-size: 14px;
        padding: 10px 5px;
        border-style: solid;
        border-width: 1px;
        overflow: hidden;
        word-break: normal;
    }

    .tg th {
        font-family: Arial, sans-serif;
        font-size: 14px;
        font-weight: normal;
        padding: 10px 5px;
        border-style: solid;
        border-width: 1px;
        overflow: hidden;
        word-break: normal;
    }

    .tg .tg-baqh {
        text-align: center;
        vertical-align: middle
    }

    .tg .tg-yw4l {
        text-align: left;
        vertical-align: top
    }

    .leftAlign {
        text-align: left
    }

    .cpepTemplate {
        width: 80%;
        margin: 10px auto
    }

    .bondText {
        font-weight: bold
    }

    .optionBox {
        position: relative;
        margin-bottom: 6px;
    }

    .radioclass {
        position: absolute;
        top: 0;
        left: 0;
        display: inline-block;
        width: 18px;
        height: 18px;
        opacity: 0;
        cursor: pointer;
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
        filter: alpha(opacity=0);
    }

    .simbleBox {
        position: absolute;
        top: 0;
        left: 0;
        display: inline-block;
        width: 18px;
        height: 18px;
        cursor: pointer;
        background-image: url("../assets/images/serviceToolImg/默认选框.png");
    }

    .clickLabel {
        margin-left: 30px;
        display: inline-block;
        cursor: pointer;
        width: calc(100% - 60px);
    }

    input[type=radio]:checked+label {
        background-image: url("../assets/images/serviceToolImg/选中选框.png");
    }

</style>
